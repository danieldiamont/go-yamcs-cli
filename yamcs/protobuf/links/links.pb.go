// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.28.1
// 	protoc        v3.12.4
// source: yamcs/protobuf/links/links.proto

package links

import (
	_ "github.com/danieldiamont/go-yamcs-cli/yamcs/api"
	_struct "github.com/golang/protobuf/ptypes/struct"
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type LinkEvent_Type int32

const (
	// A new link was registered. You also receive this event directly after you subscribe,
	//
	//	for every link that is registered at that time.
	LinkEvent_REGISTERED LinkEvent_Type = 1
	// A link was unregistered.
	LinkEvent_UNREGISTERED LinkEvent_Type = 2
	// A link was updated in one of its attributes, for example the dataCount has increased,
	// or the status has changed.
	LinkEvent_UPDATED LinkEvent_Type = 3
	// Replace entire model with the link information
	// provided in the `links` field.
	LinkEvent_UPDATE_ALL LinkEvent_Type = 4
)

// Enum value maps for LinkEvent_Type.
var (
	LinkEvent_Type_name = map[int32]string{
		1: "REGISTERED",
		2: "UNREGISTERED",
		3: "UPDATED",
		4: "UPDATE_ALL",
	}
	LinkEvent_Type_value = map[string]int32{
		"REGISTERED":   1,
		"UNREGISTERED": 2,
		"UPDATED":      3,
		"UPDATE_ALL":   4,
	}
)

func (x LinkEvent_Type) Enum() *LinkEvent_Type {
	p := new(LinkEvent_Type)
	*p = x
	return p
}

func (x LinkEvent_Type) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (LinkEvent_Type) Descriptor() protoreflect.EnumDescriptor {
	return file_yamcs_protobuf_links_links_proto_enumTypes[0].Descriptor()
}

func (LinkEvent_Type) Type() protoreflect.EnumType {
	return &file_yamcs_protobuf_links_links_proto_enumTypes[0]
}

func (x LinkEvent_Type) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Do not use.
func (x *LinkEvent_Type) UnmarshalJSON(b []byte) error {
	num, err := protoimpl.X.UnmarshalJSONEnum(x.Descriptor(), b)
	if err != nil {
		return err
	}
	*x = LinkEvent_Type(num)
	return nil
}

// Deprecated: Use LinkEvent_Type.Descriptor instead.
func (LinkEvent_Type) EnumDescriptor() ([]byte, []int) {
	return file_yamcs_protobuf_links_links_proto_rawDescGZIP(), []int{8, 0}
}

type ListLinksRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// Yamcs instance name.
	Instance *string `protobuf:"bytes,1,opt,name=instance" json:"instance,omitempty"`
}

func (x *ListLinksRequest) Reset() {
	*x = ListLinksRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_yamcs_protobuf_links_links_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ListLinksRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListLinksRequest) ProtoMessage() {}

func (x *ListLinksRequest) ProtoReflect() protoreflect.Message {
	mi := &file_yamcs_protobuf_links_links_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListLinksRequest.ProtoReflect.Descriptor instead.
func (*ListLinksRequest) Descriptor() ([]byte, []int) {
	return file_yamcs_protobuf_links_links_proto_rawDescGZIP(), []int{0}
}

func (x *ListLinksRequest) GetInstance() string {
	if x != nil && x.Instance != nil {
		return *x.Instance
	}
	return ""
}

type ListLinksResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Links []*LinkInfo `protobuf:"bytes,1,rep,name=links" json:"links,omitempty"`
}

func (x *ListLinksResponse) Reset() {
	*x = ListLinksResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_yamcs_protobuf_links_links_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ListLinksResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListLinksResponse) ProtoMessage() {}

func (x *ListLinksResponse) ProtoReflect() protoreflect.Message {
	mi := &file_yamcs_protobuf_links_links_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListLinksResponse.ProtoReflect.Descriptor instead.
func (*ListLinksResponse) Descriptor() ([]byte, []int) {
	return file_yamcs_protobuf_links_links_proto_rawDescGZIP(), []int{1}
}

func (x *ListLinksResponse) GetLinks() []*LinkInfo {
	if x != nil {
		return x.Links
	}
	return nil
}

type GetLinkRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// Yamcs instance name.
	Instance *string `protobuf:"bytes,1,opt,name=instance" json:"instance,omitempty"`
	// Link name.
	Link *string `protobuf:"bytes,2,opt,name=link" json:"link,omitempty"`
}

func (x *GetLinkRequest) Reset() {
	*x = GetLinkRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_yamcs_protobuf_links_links_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetLinkRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetLinkRequest) ProtoMessage() {}

func (x *GetLinkRequest) ProtoReflect() protoreflect.Message {
	mi := &file_yamcs_protobuf_links_links_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetLinkRequest.ProtoReflect.Descriptor instead.
func (*GetLinkRequest) Descriptor() ([]byte, []int) {
	return file_yamcs_protobuf_links_links_proto_rawDescGZIP(), []int{2}
}

func (x *GetLinkRequest) GetInstance() string {
	if x != nil && x.Instance != nil {
		return *x.Instance
	}
	return ""
}

func (x *GetLinkRequest) GetLink() string {
	if x != nil && x.Link != nil {
		return *x.Link
	}
	return ""
}

type EnableLinkRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// Yamcs instance name.
	Instance *string `protobuf:"bytes,1,opt,name=instance" json:"instance,omitempty"`
	// Link name.
	Link *string `protobuf:"bytes,2,opt,name=link" json:"link,omitempty"`
}

func (x *EnableLinkRequest) Reset() {
	*x = EnableLinkRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_yamcs_protobuf_links_links_proto_msgTypes[3]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *EnableLinkRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*EnableLinkRequest) ProtoMessage() {}

func (x *EnableLinkRequest) ProtoReflect() protoreflect.Message {
	mi := &file_yamcs_protobuf_links_links_proto_msgTypes[3]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use EnableLinkRequest.ProtoReflect.Descriptor instead.
func (*EnableLinkRequest) Descriptor() ([]byte, []int) {
	return file_yamcs_protobuf_links_links_proto_rawDescGZIP(), []int{3}
}

func (x *EnableLinkRequest) GetInstance() string {
	if x != nil && x.Instance != nil {
		return *x.Instance
	}
	return ""
}

func (x *EnableLinkRequest) GetLink() string {
	if x != nil && x.Link != nil {
		return *x.Link
	}
	return ""
}

type DisableLinkRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// Yamcs instance name.
	Instance *string `protobuf:"bytes,1,opt,name=instance" json:"instance,omitempty"`
	// Link name.
	Link *string `protobuf:"bytes,2,opt,name=link" json:"link,omitempty"`
}

func (x *DisableLinkRequest) Reset() {
	*x = DisableLinkRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_yamcs_protobuf_links_links_proto_msgTypes[4]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DisableLinkRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DisableLinkRequest) ProtoMessage() {}

func (x *DisableLinkRequest) ProtoReflect() protoreflect.Message {
	mi := &file_yamcs_protobuf_links_links_proto_msgTypes[4]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DisableLinkRequest.ProtoReflect.Descriptor instead.
func (*DisableLinkRequest) Descriptor() ([]byte, []int) {
	return file_yamcs_protobuf_links_links_proto_rawDescGZIP(), []int{4}
}

func (x *DisableLinkRequest) GetInstance() string {
	if x != nil && x.Instance != nil {
		return *x.Instance
	}
	return ""
}

func (x *DisableLinkRequest) GetLink() string {
	if x != nil && x.Link != nil {
		return *x.Link
	}
	return ""
}

type ResetLinkCountersRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// Yamcs instance name.
	Instance *string `protobuf:"bytes,1,opt,name=instance" json:"instance,omitempty"`
	// Link name.
	Link *string `protobuf:"bytes,2,opt,name=link" json:"link,omitempty"`
}

func (x *ResetLinkCountersRequest) Reset() {
	*x = ResetLinkCountersRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_yamcs_protobuf_links_links_proto_msgTypes[5]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ResetLinkCountersRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ResetLinkCountersRequest) ProtoMessage() {}

func (x *ResetLinkCountersRequest) ProtoReflect() protoreflect.Message {
	mi := &file_yamcs_protobuf_links_links_proto_msgTypes[5]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ResetLinkCountersRequest.ProtoReflect.Descriptor instead.
func (*ResetLinkCountersRequest) Descriptor() ([]byte, []int) {
	return file_yamcs_protobuf_links_links_proto_rawDescGZIP(), []int{5}
}

func (x *ResetLinkCountersRequest) GetInstance() string {
	if x != nil && x.Instance != nil {
		return *x.Instance
	}
	return ""
}

func (x *ResetLinkCountersRequest) GetLink() string {
	if x != nil && x.Link != nil {
		return *x.Link
	}
	return ""
}

type EditLinkRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// Yamcs instance name.
	Instance *string `protobuf:"bytes,3,opt,name=instance" json:"instance,omitempty"`
	// Link name.
	Link *string `protobuf:"bytes,4,opt,name=link" json:"link,omitempty"`
	// The state of the link. Either “enabled“ or “disabled“.
	State         *string `protobuf:"bytes,1,opt,name=state" json:"state,omitempty"`
	ResetCounters *bool   `protobuf:"varint,2,opt,name=resetCounters" json:"resetCounters,omitempty"`
}

func (x *EditLinkRequest) Reset() {
	*x = EditLinkRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_yamcs_protobuf_links_links_proto_msgTypes[6]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *EditLinkRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*EditLinkRequest) ProtoMessage() {}

func (x *EditLinkRequest) ProtoReflect() protoreflect.Message {
	mi := &file_yamcs_protobuf_links_links_proto_msgTypes[6]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use EditLinkRequest.ProtoReflect.Descriptor instead.
func (*EditLinkRequest) Descriptor() ([]byte, []int) {
	return file_yamcs_protobuf_links_links_proto_rawDescGZIP(), []int{6}
}

func (x *EditLinkRequest) GetInstance() string {
	if x != nil && x.Instance != nil {
		return *x.Instance
	}
	return ""
}

func (x *EditLinkRequest) GetLink() string {
	if x != nil && x.Link != nil {
		return *x.Link
	}
	return ""
}

func (x *EditLinkRequest) GetState() string {
	if x != nil && x.State != nil {
		return *x.State
	}
	return ""
}

func (x *EditLinkRequest) GetResetCounters() bool {
	if x != nil && x.ResetCounters != nil {
		return *x.ResetCounters
	}
	return false
}

type RunActionRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// Yamcs instance name.
	Instance *string `protobuf:"bytes,1,opt,name=instance" json:"instance,omitempty"`
	// Link name.
	Link *string `protobuf:"bytes,2,opt,name=link" json:"link,omitempty"`
	// Action name.
	Action *string `protobuf:"bytes,3,opt,name=action" json:"action,omitempty"`
	// Action message.
	Message *_struct.Struct `protobuf:"bytes,4,opt,name=message" json:"message,omitempty"`
}

func (x *RunActionRequest) Reset() {
	*x = RunActionRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_yamcs_protobuf_links_links_proto_msgTypes[7]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *RunActionRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RunActionRequest) ProtoMessage() {}

func (x *RunActionRequest) ProtoReflect() protoreflect.Message {
	mi := &file_yamcs_protobuf_links_links_proto_msgTypes[7]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RunActionRequest.ProtoReflect.Descriptor instead.
func (*RunActionRequest) Descriptor() ([]byte, []int) {
	return file_yamcs_protobuf_links_links_proto_rawDescGZIP(), []int{7}
}

func (x *RunActionRequest) GetInstance() string {
	if x != nil && x.Instance != nil {
		return *x.Instance
	}
	return ""
}

func (x *RunActionRequest) GetLink() string {
	if x != nil && x.Link != nil {
		return *x.Link
	}
	return ""
}

func (x *RunActionRequest) GetAction() string {
	if x != nil && x.Action != nil {
		return *x.Action
	}
	return ""
}

func (x *RunActionRequest) GetMessage() *_struct.Struct {
	if x != nil {
		return x.Message
	}
	return nil
}

type LinkEvent struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// Type of event. This field is deprecated: in older versions of Yamcs, link updates
	// were sent one-by-one using one of the types: “REGISTERED“, “UNREGISTERED“ or
	// “UPDATED“ and with the “linkInfo“ field set to that sepific link.
	//
	// In current versions of Yamcs, users are advised to switch to read the “links“
	// field instead. This will be published automatically about every second with a
	// snapshot of all links. The type for these batch updates is set to “UPDATE_ALL“.
	//
	// Deprecated: Do not use.
	Type *LinkEvent_Type `protobuf:"varint,1,opt,name=type,enum=yamcs.protobuf.links.LinkEvent_Type" json:"type,omitempty"`
	// Deprecated: read “links“ instead.
	//
	// Deprecated: Do not use.
	LinkInfo *LinkInfo `protobuf:"bytes,2,opt,name=linkInfo" json:"linkInfo,omitempty"`
	// Detail for all links.
	Links []*LinkInfo `protobuf:"bytes,3,rep,name=links" json:"links,omitempty"`
}

func (x *LinkEvent) Reset() {
	*x = LinkEvent{}
	if protoimpl.UnsafeEnabled {
		mi := &file_yamcs_protobuf_links_links_proto_msgTypes[8]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *LinkEvent) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*LinkEvent) ProtoMessage() {}

func (x *LinkEvent) ProtoReflect() protoreflect.Message {
	mi := &file_yamcs_protobuf_links_links_proto_msgTypes[8]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use LinkEvent.ProtoReflect.Descriptor instead.
func (*LinkEvent) Descriptor() ([]byte, []int) {
	return file_yamcs_protobuf_links_links_proto_rawDescGZIP(), []int{8}
}

// Deprecated: Do not use.
func (x *LinkEvent) GetType() LinkEvent_Type {
	if x != nil && x.Type != nil {
		return *x.Type
	}
	return LinkEvent_REGISTERED
}

// Deprecated: Do not use.
func (x *LinkEvent) GetLinkInfo() *LinkInfo {
	if x != nil {
		return x.LinkInfo
	}
	return nil
}

func (x *LinkEvent) GetLinks() []*LinkInfo {
	if x != nil {
		return x.Links
	}
	return nil
}

type SubscribeLinksRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// Yamcs instance name.
	Instance *string `protobuf:"bytes,1,opt,name=instance" json:"instance,omitempty"`
}

func (x *SubscribeLinksRequest) Reset() {
	*x = SubscribeLinksRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_yamcs_protobuf_links_links_proto_msgTypes[9]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SubscribeLinksRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SubscribeLinksRequest) ProtoMessage() {}

func (x *SubscribeLinksRequest) ProtoReflect() protoreflect.Message {
	mi := &file_yamcs_protobuf_links_links_proto_msgTypes[9]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SubscribeLinksRequest.ProtoReflect.Descriptor instead.
func (*SubscribeLinksRequest) Descriptor() ([]byte, []int) {
	return file_yamcs_protobuf_links_links_proto_rawDescGZIP(), []int{9}
}

func (x *SubscribeLinksRequest) GetInstance() string {
	if x != nil && x.Instance != nil {
		return *x.Instance
	}
	return ""
}

type LinkInfo struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// Yamcs instance name.
	Instance *string `protobuf:"bytes,1,opt,name=instance" json:"instance,omitempty"`
	// Link name.
	Name *string `protobuf:"bytes,2,opt,name=name" json:"name,omitempty"`
	// Java class name
	Type *string `protobuf:"bytes,3,opt,name=type" json:"type,omitempty"`
	// Configuration
	Spec *string `protobuf:"bytes,4,opt,name=spec" json:"spec,omitempty"`
	// Whether this link is currently disabled.
	Disabled *bool   `protobuf:"varint,6,opt,name=disabled" json:"disabled,omitempty"`
	Status   *string `protobuf:"bytes,7,opt,name=status" json:"status,omitempty"`
	// Counter of inbound (received) data.
	// The unit of this is specific to each link.
	DataInCount *int64 `protobuf:"varint,10,opt,name=dataInCount" json:"dataInCount,omitempty"`
	// Counter of outbound (transmitted) data.
	// The unit of this is specific to each link.
	DataOutCount *int64 `protobuf:"varint,11,opt,name=dataOutCount" json:"dataOutCount,omitempty"`
	// Short status information
	DetailedStatus *string `protobuf:"bytes,9,opt,name=detailedStatus" json:"detailedStatus,omitempty"`
	// if this is a sublink of an aggregated data link, this is the name of the parent
	ParentName *string `protobuf:"bytes,12,opt,name=parentName" json:"parentName,omitempty"`
	// Custom actions
	Actions []*LinkActionInfo `protobuf:"bytes,13,rep,name=actions" json:"actions,omitempty"`
	// Custom info fields
	Extra *_struct.Struct `protobuf:"bytes,14,opt,name=extra" json:"extra,omitempty"`
	// System parameters generated by this link
	Parameters []string `protobuf:"bytes,15,rep,name=parameters" json:"parameters,omitempty"`
}

func (x *LinkInfo) Reset() {
	*x = LinkInfo{}
	if protoimpl.UnsafeEnabled {
		mi := &file_yamcs_protobuf_links_links_proto_msgTypes[10]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *LinkInfo) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*LinkInfo) ProtoMessage() {}

func (x *LinkInfo) ProtoReflect() protoreflect.Message {
	mi := &file_yamcs_protobuf_links_links_proto_msgTypes[10]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use LinkInfo.ProtoReflect.Descriptor instead.
func (*LinkInfo) Descriptor() ([]byte, []int) {
	return file_yamcs_protobuf_links_links_proto_rawDescGZIP(), []int{10}
}

func (x *LinkInfo) GetInstance() string {
	if x != nil && x.Instance != nil {
		return *x.Instance
	}
	return ""
}

func (x *LinkInfo) GetName() string {
	if x != nil && x.Name != nil {
		return *x.Name
	}
	return ""
}

func (x *LinkInfo) GetType() string {
	if x != nil && x.Type != nil {
		return *x.Type
	}
	return ""
}

func (x *LinkInfo) GetSpec() string {
	if x != nil && x.Spec != nil {
		return *x.Spec
	}
	return ""
}

func (x *LinkInfo) GetDisabled() bool {
	if x != nil && x.Disabled != nil {
		return *x.Disabled
	}
	return false
}

func (x *LinkInfo) GetStatus() string {
	if x != nil && x.Status != nil {
		return *x.Status
	}
	return ""
}

func (x *LinkInfo) GetDataInCount() int64 {
	if x != nil && x.DataInCount != nil {
		return *x.DataInCount
	}
	return 0
}

func (x *LinkInfo) GetDataOutCount() int64 {
	if x != nil && x.DataOutCount != nil {
		return *x.DataOutCount
	}
	return 0
}

func (x *LinkInfo) GetDetailedStatus() string {
	if x != nil && x.DetailedStatus != nil {
		return *x.DetailedStatus
	}
	return ""
}

func (x *LinkInfo) GetParentName() string {
	if x != nil && x.ParentName != nil {
		return *x.ParentName
	}
	return ""
}

func (x *LinkInfo) GetActions() []*LinkActionInfo {
	if x != nil {
		return x.Actions
	}
	return nil
}

func (x *LinkInfo) GetExtra() *_struct.Struct {
	if x != nil {
		return x.Extra
	}
	return nil
}

func (x *LinkInfo) GetParameters() []string {
	if x != nil {
		return x.Parameters
	}
	return nil
}

type LinkActionInfo struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// Action ID.
	Id *string `protobuf:"bytes,1,opt,name=id" json:"id,omitempty"`
	// Label describing an action
	Label *string `protobuf:"bytes,2,opt,name=label" json:"label,omitempty"`
	Style *string `protobuf:"bytes,3,opt,name=style" json:"style,omitempty"`
	// Whether this action is currently enabled.
	Enabled *bool `protobuf:"varint,4,opt,name=enabled" json:"enabled,omitempty"`
	// Whether this action is currently checked.
	Checked *bool `protobuf:"varint,5,opt,name=checked" json:"checked,omitempty"`
}

func (x *LinkActionInfo) Reset() {
	*x = LinkActionInfo{}
	if protoimpl.UnsafeEnabled {
		mi := &file_yamcs_protobuf_links_links_proto_msgTypes[11]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *LinkActionInfo) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*LinkActionInfo) ProtoMessage() {}

func (x *LinkActionInfo) ProtoReflect() protoreflect.Message {
	mi := &file_yamcs_protobuf_links_links_proto_msgTypes[11]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use LinkActionInfo.ProtoReflect.Descriptor instead.
func (*LinkActionInfo) Descriptor() ([]byte, []int) {
	return file_yamcs_protobuf_links_links_proto_rawDescGZIP(), []int{11}
}

func (x *LinkActionInfo) GetId() string {
	if x != nil && x.Id != nil {
		return *x.Id
	}
	return ""
}

func (x *LinkActionInfo) GetLabel() string {
	if x != nil && x.Label != nil {
		return *x.Label
	}
	return ""
}

func (x *LinkActionInfo) GetStyle() string {
	if x != nil && x.Style != nil {
		return *x.Style
	}
	return ""
}

func (x *LinkActionInfo) GetEnabled() bool {
	if x != nil && x.Enabled != nil {
		return *x.Enabled
	}
	return false
}

func (x *LinkActionInfo) GetChecked() bool {
	if x != nil && x.Checked != nil {
		return *x.Checked
	}
	return false
}

var File_yamcs_protobuf_links_links_proto protoreflect.FileDescriptor

var file_yamcs_protobuf_links_links_proto_rawDesc = []byte{
	0x0a, 0x20, 0x79, 0x61, 0x6d, 0x63, 0x73, 0x2f, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66,
	0x2f, 0x6c, 0x69, 0x6e, 0x6b, 0x73, 0x2f, 0x6c, 0x69, 0x6e, 0x6b, 0x73, 0x2e, 0x70, 0x72, 0x6f,
	0x74, 0x6f, 0x12, 0x14, 0x79, 0x61, 0x6d, 0x63, 0x73, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62,
	0x75, 0x66, 0x2e, 0x6c, 0x69, 0x6e, 0x6b, 0x73, 0x1a, 0x1b, 0x79, 0x61, 0x6d, 0x63, 0x73, 0x2f,
	0x61, 0x70, 0x69, 0x2f, 0x61, 0x6e, 0x6e, 0x6f, 0x74, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x2e,
	0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x1c, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2f, 0x70, 0x72,
	0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2f, 0x73, 0x74, 0x72, 0x75, 0x63, 0x74, 0x2e, 0x70, 0x72,
	0x6f, 0x74, 0x6f, 0x22, 0x2e, 0x0a, 0x10, 0x4c, 0x69, 0x73, 0x74, 0x4c, 0x69, 0x6e, 0x6b, 0x73,
	0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x1a, 0x0a, 0x08, 0x69, 0x6e, 0x73, 0x74, 0x61,
	0x6e, 0x63, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x69, 0x6e, 0x73, 0x74, 0x61,
	0x6e, 0x63, 0x65, 0x22, 0x49, 0x0a, 0x11, 0x4c, 0x69, 0x73, 0x74, 0x4c, 0x69, 0x6e, 0x6b, 0x73,
	0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x34, 0x0a, 0x05, 0x6c, 0x69, 0x6e, 0x6b,
	0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x1e, 0x2e, 0x79, 0x61, 0x6d, 0x63, 0x73, 0x2e,
	0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x6c, 0x69, 0x6e, 0x6b, 0x73, 0x2e, 0x4c,
	0x69, 0x6e, 0x6b, 0x49, 0x6e, 0x66, 0x6f, 0x52, 0x05, 0x6c, 0x69, 0x6e, 0x6b, 0x73, 0x22, 0x40,
	0x0a, 0x0e, 0x47, 0x65, 0x74, 0x4c, 0x69, 0x6e, 0x6b, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74,
	0x12, 0x1a, 0x0a, 0x08, 0x69, 0x6e, 0x73, 0x74, 0x61, 0x6e, 0x63, 0x65, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x08, 0x69, 0x6e, 0x73, 0x74, 0x61, 0x6e, 0x63, 0x65, 0x12, 0x12, 0x0a, 0x04,
	0x6c, 0x69, 0x6e, 0x6b, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x6c, 0x69, 0x6e, 0x6b,
	0x22, 0x43, 0x0a, 0x11, 0x45, 0x6e, 0x61, 0x62, 0x6c, 0x65, 0x4c, 0x69, 0x6e, 0x6b, 0x52, 0x65,
	0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x1a, 0x0a, 0x08, 0x69, 0x6e, 0x73, 0x74, 0x61, 0x6e, 0x63,
	0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x69, 0x6e, 0x73, 0x74, 0x61, 0x6e, 0x63,
	0x65, 0x12, 0x12, 0x0a, 0x04, 0x6c, 0x69, 0x6e, 0x6b, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x04, 0x6c, 0x69, 0x6e, 0x6b, 0x22, 0x44, 0x0a, 0x12, 0x44, 0x69, 0x73, 0x61, 0x62, 0x6c, 0x65,
	0x4c, 0x69, 0x6e, 0x6b, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x1a, 0x0a, 0x08, 0x69,
	0x6e, 0x73, 0x74, 0x61, 0x6e, 0x63, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x69,
	0x6e, 0x73, 0x74, 0x61, 0x6e, 0x63, 0x65, 0x12, 0x12, 0x0a, 0x04, 0x6c, 0x69, 0x6e, 0x6b, 0x18,
	0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x6c, 0x69, 0x6e, 0x6b, 0x22, 0x4a, 0x0a, 0x18, 0x52,
	0x65, 0x73, 0x65, 0x74, 0x4c, 0x69, 0x6e, 0x6b, 0x43, 0x6f, 0x75, 0x6e, 0x74, 0x65, 0x72, 0x73,
	0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x1a, 0x0a, 0x08, 0x69, 0x6e, 0x73, 0x74, 0x61,
	0x6e, 0x63, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x69, 0x6e, 0x73, 0x74, 0x61,
	0x6e, 0x63, 0x65, 0x12, 0x12, 0x0a, 0x04, 0x6c, 0x69, 0x6e, 0x6b, 0x18, 0x02, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x04, 0x6c, 0x69, 0x6e, 0x6b, 0x22, 0x7d, 0x0a, 0x0f, 0x45, 0x64, 0x69, 0x74, 0x4c,
	0x69, 0x6e, 0x6b, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x1a, 0x0a, 0x08, 0x69, 0x6e,
	0x73, 0x74, 0x61, 0x6e, 0x63, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x69, 0x6e,
	0x73, 0x74, 0x61, 0x6e, 0x63, 0x65, 0x12, 0x12, 0x0a, 0x04, 0x6c, 0x69, 0x6e, 0x6b, 0x18, 0x04,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x6c, 0x69, 0x6e, 0x6b, 0x12, 0x14, 0x0a, 0x05, 0x73, 0x74,
	0x61, 0x74, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x73, 0x74, 0x61, 0x74, 0x65,
	0x12, 0x24, 0x0a, 0x0d, 0x72, 0x65, 0x73, 0x65, 0x74, 0x43, 0x6f, 0x75, 0x6e, 0x74, 0x65, 0x72,
	0x73, 0x18, 0x02, 0x20, 0x01, 0x28, 0x08, 0x52, 0x0d, 0x72, 0x65, 0x73, 0x65, 0x74, 0x43, 0x6f,
	0x75, 0x6e, 0x74, 0x65, 0x72, 0x73, 0x22, 0x8d, 0x01, 0x0a, 0x10, 0x52, 0x75, 0x6e, 0x41, 0x63,
	0x74, 0x69, 0x6f, 0x6e, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x1a, 0x0a, 0x08, 0x69,
	0x6e, 0x73, 0x74, 0x61, 0x6e, 0x63, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x69,
	0x6e, 0x73, 0x74, 0x61, 0x6e, 0x63, 0x65, 0x12, 0x12, 0x0a, 0x04, 0x6c, 0x69, 0x6e, 0x6b, 0x18,
	0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x6c, 0x69, 0x6e, 0x6b, 0x12, 0x16, 0x0a, 0x06, 0x61,
	0x63, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x61, 0x63, 0x74,
	0x69, 0x6f, 0x6e, 0x12, 0x31, 0x0a, 0x07, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x18, 0x04,
	0x20, 0x01, 0x28, 0x0b, 0x32, 0x17, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72,
	0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x53, 0x74, 0x72, 0x75, 0x63, 0x74, 0x52, 0x07, 0x6d,
	0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x22, 0x86, 0x02, 0x0a, 0x09, 0x4c, 0x69, 0x6e, 0x6b, 0x45,
	0x76, 0x65, 0x6e, 0x74, 0x12, 0x3c, 0x0a, 0x04, 0x74, 0x79, 0x70, 0x65, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x0e, 0x32, 0x24, 0x2e, 0x79, 0x61, 0x6d, 0x63, 0x73, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f,
	0x62, 0x75, 0x66, 0x2e, 0x6c, 0x69, 0x6e, 0x6b, 0x73, 0x2e, 0x4c, 0x69, 0x6e, 0x6b, 0x45, 0x76,
	0x65, 0x6e, 0x74, 0x2e, 0x54, 0x79, 0x70, 0x65, 0x42, 0x02, 0x18, 0x01, 0x52, 0x04, 0x74, 0x79,
	0x70, 0x65, 0x12, 0x3e, 0x0a, 0x08, 0x6c, 0x69, 0x6e, 0x6b, 0x49, 0x6e, 0x66, 0x6f, 0x18, 0x02,
	0x20, 0x01, 0x28, 0x0b, 0x32, 0x1e, 0x2e, 0x79, 0x61, 0x6d, 0x63, 0x73, 0x2e, 0x70, 0x72, 0x6f,
	0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x6c, 0x69, 0x6e, 0x6b, 0x73, 0x2e, 0x4c, 0x69, 0x6e, 0x6b,
	0x49, 0x6e, 0x66, 0x6f, 0x42, 0x02, 0x18, 0x01, 0x52, 0x08, 0x6c, 0x69, 0x6e, 0x6b, 0x49, 0x6e,
	0x66, 0x6f, 0x12, 0x34, 0x0a, 0x05, 0x6c, 0x69, 0x6e, 0x6b, 0x73, 0x18, 0x03, 0x20, 0x03, 0x28,
	0x0b, 0x32, 0x1e, 0x2e, 0x79, 0x61, 0x6d, 0x63, 0x73, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62,
	0x75, 0x66, 0x2e, 0x6c, 0x69, 0x6e, 0x6b, 0x73, 0x2e, 0x4c, 0x69, 0x6e, 0x6b, 0x49, 0x6e, 0x66,
	0x6f, 0x52, 0x05, 0x6c, 0x69, 0x6e, 0x6b, 0x73, 0x22, 0x45, 0x0a, 0x04, 0x54, 0x79, 0x70, 0x65,
	0x12, 0x0e, 0x0a, 0x0a, 0x52, 0x45, 0x47, 0x49, 0x53, 0x54, 0x45, 0x52, 0x45, 0x44, 0x10, 0x01,
	0x12, 0x10, 0x0a, 0x0c, 0x55, 0x4e, 0x52, 0x45, 0x47, 0x49, 0x53, 0x54, 0x45, 0x52, 0x45, 0x44,
	0x10, 0x02, 0x12, 0x0b, 0x0a, 0x07, 0x55, 0x50, 0x44, 0x41, 0x54, 0x45, 0x44, 0x10, 0x03, 0x12,
	0x0e, 0x0a, 0x0a, 0x55, 0x50, 0x44, 0x41, 0x54, 0x45, 0x5f, 0x41, 0x4c, 0x4c, 0x10, 0x04, 0x22,
	0x33, 0x0a, 0x15, 0x53, 0x75, 0x62, 0x73, 0x63, 0x72, 0x69, 0x62, 0x65, 0x4c, 0x69, 0x6e, 0x6b,
	0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x1a, 0x0a, 0x08, 0x69, 0x6e, 0x73, 0x74,
	0x61, 0x6e, 0x63, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x69, 0x6e, 0x73, 0x74,
	0x61, 0x6e, 0x63, 0x65, 0x22, 0xbf, 0x03, 0x0a, 0x08, 0x4c, 0x69, 0x6e, 0x6b, 0x49, 0x6e, 0x66,
	0x6f, 0x12, 0x1a, 0x0a, 0x08, 0x69, 0x6e, 0x73, 0x74, 0x61, 0x6e, 0x63, 0x65, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x08, 0x69, 0x6e, 0x73, 0x74, 0x61, 0x6e, 0x63, 0x65, 0x12, 0x12, 0x0a,
	0x04, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x6e, 0x61, 0x6d,
	0x65, 0x12, 0x12, 0x0a, 0x04, 0x74, 0x79, 0x70, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x04, 0x74, 0x79, 0x70, 0x65, 0x12, 0x12, 0x0a, 0x04, 0x73, 0x70, 0x65, 0x63, 0x18, 0x04, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x04, 0x73, 0x70, 0x65, 0x63, 0x12, 0x1a, 0x0a, 0x08, 0x64, 0x69, 0x73,
	0x61, 0x62, 0x6c, 0x65, 0x64, 0x18, 0x06, 0x20, 0x01, 0x28, 0x08, 0x52, 0x08, 0x64, 0x69, 0x73,
	0x61, 0x62, 0x6c, 0x65, 0x64, 0x12, 0x16, 0x0a, 0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x18,
	0x07, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x12, 0x20, 0x0a,
	0x0b, 0x64, 0x61, 0x74, 0x61, 0x49, 0x6e, 0x43, 0x6f, 0x75, 0x6e, 0x74, 0x18, 0x0a, 0x20, 0x01,
	0x28, 0x03, 0x52, 0x0b, 0x64, 0x61, 0x74, 0x61, 0x49, 0x6e, 0x43, 0x6f, 0x75, 0x6e, 0x74, 0x12,
	0x22, 0x0a, 0x0c, 0x64, 0x61, 0x74, 0x61, 0x4f, 0x75, 0x74, 0x43, 0x6f, 0x75, 0x6e, 0x74, 0x18,
	0x0b, 0x20, 0x01, 0x28, 0x03, 0x52, 0x0c, 0x64, 0x61, 0x74, 0x61, 0x4f, 0x75, 0x74, 0x43, 0x6f,
	0x75, 0x6e, 0x74, 0x12, 0x26, 0x0a, 0x0e, 0x64, 0x65, 0x74, 0x61, 0x69, 0x6c, 0x65, 0x64, 0x53,
	0x74, 0x61, 0x74, 0x75, 0x73, 0x18, 0x09, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0e, 0x64, 0x65, 0x74,
	0x61, 0x69, 0x6c, 0x65, 0x64, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x12, 0x1e, 0x0a, 0x0a, 0x70,
	0x61, 0x72, 0x65, 0x6e, 0x74, 0x4e, 0x61, 0x6d, 0x65, 0x18, 0x0c, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x0a, 0x70, 0x61, 0x72, 0x65, 0x6e, 0x74, 0x4e, 0x61, 0x6d, 0x65, 0x12, 0x3e, 0x0a, 0x07, 0x61,
	0x63, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x18, 0x0d, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x24, 0x2e, 0x79,
	0x61, 0x6d, 0x63, 0x73, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x6c, 0x69,
	0x6e, 0x6b, 0x73, 0x2e, 0x4c, 0x69, 0x6e, 0x6b, 0x41, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x49, 0x6e,
	0x66, 0x6f, 0x52, 0x07, 0x61, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x12, 0x2d, 0x0a, 0x05, 0x65,
	0x78, 0x74, 0x72, 0x61, 0x18, 0x0e, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x17, 0x2e, 0x67, 0x6f, 0x6f,
	0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x53, 0x74, 0x72,
	0x75, 0x63, 0x74, 0x52, 0x05, 0x65, 0x78, 0x74, 0x72, 0x61, 0x12, 0x1e, 0x0a, 0x0a, 0x70, 0x61,
	0x72, 0x61, 0x6d, 0x65, 0x74, 0x65, 0x72, 0x73, 0x18, 0x0f, 0x20, 0x03, 0x28, 0x09, 0x52, 0x0a,
	0x70, 0x61, 0x72, 0x61, 0x6d, 0x65, 0x74, 0x65, 0x72, 0x73, 0x4a, 0x04, 0x08, 0x05, 0x10, 0x06,
	0x4a, 0x04, 0x08, 0x08, 0x10, 0x09, 0x22, 0x80, 0x01, 0x0a, 0x0e, 0x4c, 0x69, 0x6e, 0x6b, 0x41,
	0x63, 0x74, 0x69, 0x6f, 0x6e, 0x49, 0x6e, 0x66, 0x6f, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x02, 0x69, 0x64, 0x12, 0x14, 0x0a, 0x05, 0x6c, 0x61, 0x62,
	0x65, 0x6c, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x6c, 0x61, 0x62, 0x65, 0x6c, 0x12,
	0x14, 0x0a, 0x05, 0x73, 0x74, 0x79, 0x6c, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05,
	0x73, 0x74, 0x79, 0x6c, 0x65, 0x12, 0x18, 0x0a, 0x07, 0x65, 0x6e, 0x61, 0x62, 0x6c, 0x65, 0x64,
	0x18, 0x04, 0x20, 0x01, 0x28, 0x08, 0x52, 0x07, 0x65, 0x6e, 0x61, 0x62, 0x6c, 0x65, 0x64, 0x12,
	0x18, 0x0a, 0x07, 0x63, 0x68, 0x65, 0x63, 0x6b, 0x65, 0x64, 0x18, 0x05, 0x20, 0x01, 0x28, 0x08,
	0x52, 0x07, 0x63, 0x68, 0x65, 0x63, 0x6b, 0x65, 0x64, 0x32, 0x8b, 0x09, 0x0a, 0x08, 0x4c, 0x69,
	0x6e, 0x6b, 0x73, 0x41, 0x70, 0x69, 0x12, 0x7a, 0x0a, 0x09, 0x4c, 0x69, 0x73, 0x74, 0x4c, 0x69,
	0x6e, 0x6b, 0x73, 0x12, 0x26, 0x2e, 0x79, 0x61, 0x6d, 0x63, 0x73, 0x2e, 0x70, 0x72, 0x6f, 0x74,
	0x6f, 0x62, 0x75, 0x66, 0x2e, 0x6c, 0x69, 0x6e, 0x6b, 0x73, 0x2e, 0x4c, 0x69, 0x73, 0x74, 0x4c,
	0x69, 0x6e, 0x6b, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x27, 0x2e, 0x79, 0x61,
	0x6d, 0x63, 0x73, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x6c, 0x69, 0x6e,
	0x6b, 0x73, 0x2e, 0x4c, 0x69, 0x73, 0x74, 0x4c, 0x69, 0x6e, 0x6b, 0x73, 0x52, 0x65, 0x73, 0x70,
	0x6f, 0x6e, 0x73, 0x65, 0x22, 0x1c, 0x8a, 0x92, 0x03, 0x18, 0x0a, 0x16, 0x2f, 0x61, 0x70, 0x69,
	0x2f, 0x6c, 0x69, 0x6e, 0x6b, 0x73, 0x2f, 0x7b, 0x69, 0x6e, 0x73, 0x74, 0x61, 0x6e, 0x63, 0x65,
	0x3f, 0x7d, 0x12, 0x73, 0x0a, 0x07, 0x47, 0x65, 0x74, 0x4c, 0x69, 0x6e, 0x6b, 0x12, 0x24, 0x2e,
	0x79, 0x61, 0x6d, 0x63, 0x73, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x6c,
	0x69, 0x6e, 0x6b, 0x73, 0x2e, 0x47, 0x65, 0x74, 0x4c, 0x69, 0x6e, 0x6b, 0x52, 0x65, 0x71, 0x75,
	0x65, 0x73, 0x74, 0x1a, 0x1e, 0x2e, 0x79, 0x61, 0x6d, 0x63, 0x73, 0x2e, 0x70, 0x72, 0x6f, 0x74,
	0x6f, 0x62, 0x75, 0x66, 0x2e, 0x6c, 0x69, 0x6e, 0x6b, 0x73, 0x2e, 0x4c, 0x69, 0x6e, 0x6b, 0x49,
	0x6e, 0x66, 0x6f, 0x22, 0x22, 0x8a, 0x92, 0x03, 0x1e, 0x0a, 0x1c, 0x2f, 0x61, 0x70, 0x69, 0x2f,
	0x6c, 0x69, 0x6e, 0x6b, 0x73, 0x2f, 0x7b, 0x69, 0x6e, 0x73, 0x74, 0x61, 0x6e, 0x63, 0x65, 0x7d,
	0x2f, 0x7b, 0x6c, 0x69, 0x6e, 0x6b, 0x7d, 0x12, 0x93, 0x01, 0x0a, 0x0a, 0x55, 0x70, 0x64, 0x61,
	0x74, 0x65, 0x4c, 0x69, 0x6e, 0x6b, 0x12, 0x25, 0x2e, 0x79, 0x61, 0x6d, 0x63, 0x73, 0x2e, 0x70,
	0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x6c, 0x69, 0x6e, 0x6b, 0x73, 0x2e, 0x45, 0x64,
	0x69, 0x74, 0x4c, 0x69, 0x6e, 0x6b, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x1e, 0x2e,
	0x79, 0x61, 0x6d, 0x63, 0x73, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x6c,
	0x69, 0x6e, 0x6b, 0x73, 0x2e, 0x4c, 0x69, 0x6e, 0x6b, 0x49, 0x6e, 0x66, 0x6f, 0x22, 0x3e, 0x8a,
	0x92, 0x03, 0x3a, 0x2a, 0x1c, 0x2f, 0x61, 0x70, 0x69, 0x2f, 0x6c, 0x69, 0x6e, 0x6b, 0x73, 0x2f,
	0x7b, 0x69, 0x6e, 0x73, 0x74, 0x61, 0x6e, 0x63, 0x65, 0x7d, 0x2f, 0x7b, 0x6c, 0x69, 0x6e, 0x6b,
	0x7d, 0x30, 0x01, 0x3a, 0x01, 0x2a, 0x62, 0x15, 0x4c, 0x69, 0x6e, 0x6b, 0x20, 0x27, 0x7b, 0x6c,
	0x69, 0x6e, 0x6b, 0x7d, 0x27, 0x20, 0x75, 0x70, 0x64, 0x61, 0x74, 0x65, 0x64, 0x12, 0x97, 0x01,
	0x0a, 0x0a, 0x45, 0x6e, 0x61, 0x62, 0x6c, 0x65, 0x4c, 0x69, 0x6e, 0x6b, 0x12, 0x27, 0x2e, 0x79,
	0x61, 0x6d, 0x63, 0x73, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x6c, 0x69,
	0x6e, 0x6b, 0x73, 0x2e, 0x45, 0x6e, 0x61, 0x62, 0x6c, 0x65, 0x4c, 0x69, 0x6e, 0x6b, 0x52, 0x65,
	0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x1e, 0x2e, 0x79, 0x61, 0x6d, 0x63, 0x73, 0x2e, 0x70, 0x72,
	0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x6c, 0x69, 0x6e, 0x6b, 0x73, 0x2e, 0x4c, 0x69, 0x6e,
	0x6b, 0x49, 0x6e, 0x66, 0x6f, 0x22, 0x40, 0x8a, 0x92, 0x03, 0x3c, 0x1a, 0x23, 0x2f, 0x61, 0x70,
	0x69, 0x2f, 0x6c, 0x69, 0x6e, 0x6b, 0x73, 0x2f, 0x7b, 0x69, 0x6e, 0x73, 0x74, 0x61, 0x6e, 0x63,
	0x65, 0x7d, 0x2f, 0x7b, 0x6c, 0x69, 0x6e, 0x6b, 0x7d, 0x3a, 0x65, 0x6e, 0x61, 0x62, 0x6c, 0x65,
	0x62, 0x15, 0x4c, 0x69, 0x6e, 0x6b, 0x20, 0x27, 0x7b, 0x6c, 0x69, 0x6e, 0x6b, 0x7d, 0x27, 0x20,
	0x65, 0x6e, 0x61, 0x62, 0x6c, 0x65, 0x64, 0x12, 0x9b, 0x01, 0x0a, 0x0b, 0x44, 0x69, 0x73, 0x61,
	0x62, 0x6c, 0x65, 0x4c, 0x69, 0x6e, 0x6b, 0x12, 0x28, 0x2e, 0x79, 0x61, 0x6d, 0x63, 0x73, 0x2e,
	0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x6c, 0x69, 0x6e, 0x6b, 0x73, 0x2e, 0x44,
	0x69, 0x73, 0x61, 0x62, 0x6c, 0x65, 0x4c, 0x69, 0x6e, 0x6b, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73,
	0x74, 0x1a, 0x1e, 0x2e, 0x79, 0x61, 0x6d, 0x63, 0x73, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62,
	0x75, 0x66, 0x2e, 0x6c, 0x69, 0x6e, 0x6b, 0x73, 0x2e, 0x4c, 0x69, 0x6e, 0x6b, 0x49, 0x6e, 0x66,
	0x6f, 0x22, 0x42, 0x8a, 0x92, 0x03, 0x3e, 0x1a, 0x24, 0x2f, 0x61, 0x70, 0x69, 0x2f, 0x6c, 0x69,
	0x6e, 0x6b, 0x73, 0x2f, 0x7b, 0x69, 0x6e, 0x73, 0x74, 0x61, 0x6e, 0x63, 0x65, 0x7d, 0x2f, 0x7b,
	0x6c, 0x69, 0x6e, 0x6b, 0x7d, 0x3a, 0x64, 0x69, 0x73, 0x61, 0x62, 0x6c, 0x65, 0x62, 0x16, 0x4c,
	0x69, 0x6e, 0x6b, 0x20, 0x27, 0x7b, 0x6c, 0x69, 0x6e, 0x6b, 0x7d, 0x27, 0x20, 0x64, 0x69, 0x73,
	0x61, 0x62, 0x6c, 0x65, 0x64, 0x12, 0x95, 0x01, 0x0a, 0x11, 0x52, 0x65, 0x73, 0x65, 0x74, 0x4c,
	0x69, 0x6e, 0x6b, 0x43, 0x6f, 0x75, 0x6e, 0x74, 0x65, 0x72, 0x73, 0x12, 0x2e, 0x2e, 0x79, 0x61,
	0x6d, 0x63, 0x73, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x6c, 0x69, 0x6e,
	0x6b, 0x73, 0x2e, 0x52, 0x65, 0x73, 0x65, 0x74, 0x4c, 0x69, 0x6e, 0x6b, 0x43, 0x6f, 0x75, 0x6e,
	0x74, 0x65, 0x72, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x1e, 0x2e, 0x79, 0x61,
	0x6d, 0x63, 0x73, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x6c, 0x69, 0x6e,
	0x6b, 0x73, 0x2e, 0x4c, 0x69, 0x6e, 0x6b, 0x49, 0x6e, 0x66, 0x6f, 0x22, 0x30, 0x8a, 0x92, 0x03,
	0x2c, 0x1a, 0x2a, 0x2f, 0x61, 0x70, 0x69, 0x2f, 0x6c, 0x69, 0x6e, 0x6b, 0x73, 0x2f, 0x7b, 0x69,
	0x6e, 0x73, 0x74, 0x61, 0x6e, 0x63, 0x65, 0x7d, 0x2f, 0x7b, 0x6c, 0x69, 0x6e, 0x6b, 0x7d, 0x3a,
	0x72, 0x65, 0x73, 0x65, 0x74, 0x43, 0x6f, 0x75, 0x6e, 0x74, 0x65, 0x72, 0x73, 0x12, 0x6d, 0x0a,
	0x0e, 0x53, 0x75, 0x62, 0x73, 0x63, 0x72, 0x69, 0x62, 0x65, 0x4c, 0x69, 0x6e, 0x6b, 0x73, 0x12,
	0x2b, 0x2e, 0x79, 0x61, 0x6d, 0x63, 0x73, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66,
	0x2e, 0x6c, 0x69, 0x6e, 0x6b, 0x73, 0x2e, 0x53, 0x75, 0x62, 0x73, 0x63, 0x72, 0x69, 0x62, 0x65,
	0x4c, 0x69, 0x6e, 0x6b, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x1f, 0x2e, 0x79,
	0x61, 0x6d, 0x63, 0x73, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x6c, 0x69,
	0x6e, 0x6b, 0x73, 0x2e, 0x4c, 0x69, 0x6e, 0x6b, 0x45, 0x76, 0x65, 0x6e, 0x74, 0x22, 0x0b, 0xda,
	0x92, 0x03, 0x07, 0x0a, 0x05, 0x6c, 0x69, 0x6e, 0x6b, 0x73, 0x30, 0x01, 0x12, 0xb8, 0x01, 0x0a,
	0x09, 0x52, 0x75, 0x6e, 0x41, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x26, 0x2e, 0x79, 0x61, 0x6d,
	0x63, 0x73, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x6c, 0x69, 0x6e, 0x6b,
	0x73, 0x2e, 0x52, 0x75, 0x6e, 0x41, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x65, 0x71, 0x75, 0x65,
	0x73, 0x74, 0x1a, 0x17, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74,
	0x6f, 0x62, 0x75, 0x66, 0x2e, 0x53, 0x74, 0x72, 0x75, 0x63, 0x74, 0x22, 0x6a, 0x8a, 0x92, 0x03,
	0x66, 0x1a, 0x2d, 0x2f, 0x61, 0x70, 0x69, 0x2f, 0x6c, 0x69, 0x6e, 0x6b, 0x73, 0x2f, 0x7b, 0x69,
	0x6e, 0x73, 0x74, 0x61, 0x6e, 0x63, 0x65, 0x7d, 0x2f, 0x7b, 0x6c, 0x69, 0x6e, 0x6b, 0x7d, 0x2f,
	0x61, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x2f, 0x7b, 0x61, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x7d,
	0x3a, 0x07, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x62, 0x2c, 0x41, 0x63, 0x74, 0x69, 0x6f,
	0x6e, 0x20, 0x27, 0x7b, 0x61, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x7d, 0x27, 0x20, 0x70, 0x65, 0x72,
	0x66, 0x6f, 0x72, 0x6d, 0x65, 0x64, 0x20, 0x6f, 0x6e, 0x20, 0x6c, 0x69, 0x6e, 0x6b, 0x20, 0x27,
	0x7b, 0x6c, 0x69, 0x6e, 0x6b, 0x7d, 0x27, 0x42, 0x6b, 0x0a, 0x18, 0x6f, 0x72, 0x67, 0x2e, 0x79,
	0x61, 0x6d, 0x63, 0x73, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x6c, 0x69,
	0x6e, 0x6b, 0x73, 0x42, 0x11, 0x4c, 0x69, 0x6e, 0x6b, 0x73, 0x53, 0x65, 0x72, 0x76, 0x69, 0x63,
	0x65, 0x50, 0x72, 0x6f, 0x74, 0x6f, 0x50, 0x01, 0x5a, 0x3a, 0x67, 0x69, 0x74, 0x68, 0x75, 0x62,
	0x2e, 0x63, 0x6f, 0x6d, 0x2f, 0x64, 0x61, 0x6e, 0x69, 0x65, 0x6c, 0x64, 0x69, 0x61, 0x6d, 0x6f,
	0x6e, 0x74, 0x2f, 0x67, 0x6f, 0x2d, 0x79, 0x61, 0x6d, 0x63, 0x73, 0x2d, 0x63, 0x6c, 0x69, 0x2f,
	0x79, 0x61, 0x6d, 0x63, 0x73, 0x2f, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2f, 0x6c,
	0x69, 0x6e, 0x6b, 0x73,
}

var (
	file_yamcs_protobuf_links_links_proto_rawDescOnce sync.Once
	file_yamcs_protobuf_links_links_proto_rawDescData = file_yamcs_protobuf_links_links_proto_rawDesc
)

func file_yamcs_protobuf_links_links_proto_rawDescGZIP() []byte {
	file_yamcs_protobuf_links_links_proto_rawDescOnce.Do(func() {
		file_yamcs_protobuf_links_links_proto_rawDescData = protoimpl.X.CompressGZIP(file_yamcs_protobuf_links_links_proto_rawDescData)
	})
	return file_yamcs_protobuf_links_links_proto_rawDescData
}

var file_yamcs_protobuf_links_links_proto_enumTypes = make([]protoimpl.EnumInfo, 1)
var file_yamcs_protobuf_links_links_proto_msgTypes = make([]protoimpl.MessageInfo, 12)
var file_yamcs_protobuf_links_links_proto_goTypes = []interface{}{
	(LinkEvent_Type)(0),              // 0: yamcs.protobuf.links.LinkEvent.Type
	(*ListLinksRequest)(nil),         // 1: yamcs.protobuf.links.ListLinksRequest
	(*ListLinksResponse)(nil),        // 2: yamcs.protobuf.links.ListLinksResponse
	(*GetLinkRequest)(nil),           // 3: yamcs.protobuf.links.GetLinkRequest
	(*EnableLinkRequest)(nil),        // 4: yamcs.protobuf.links.EnableLinkRequest
	(*DisableLinkRequest)(nil),       // 5: yamcs.protobuf.links.DisableLinkRequest
	(*ResetLinkCountersRequest)(nil), // 6: yamcs.protobuf.links.ResetLinkCountersRequest
	(*EditLinkRequest)(nil),          // 7: yamcs.protobuf.links.EditLinkRequest
	(*RunActionRequest)(nil),         // 8: yamcs.protobuf.links.RunActionRequest
	(*LinkEvent)(nil),                // 9: yamcs.protobuf.links.LinkEvent
	(*SubscribeLinksRequest)(nil),    // 10: yamcs.protobuf.links.SubscribeLinksRequest
	(*LinkInfo)(nil),                 // 11: yamcs.protobuf.links.LinkInfo
	(*LinkActionInfo)(nil),           // 12: yamcs.protobuf.links.LinkActionInfo
	(*_struct.Struct)(nil),           // 13: google.protobuf.Struct
}
var file_yamcs_protobuf_links_links_proto_depIdxs = []int32{
	11, // 0: yamcs.protobuf.links.ListLinksResponse.links:type_name -> yamcs.protobuf.links.LinkInfo
	13, // 1: yamcs.protobuf.links.RunActionRequest.message:type_name -> google.protobuf.Struct
	0,  // 2: yamcs.protobuf.links.LinkEvent.type:type_name -> yamcs.protobuf.links.LinkEvent.Type
	11, // 3: yamcs.protobuf.links.LinkEvent.linkInfo:type_name -> yamcs.protobuf.links.LinkInfo
	11, // 4: yamcs.protobuf.links.LinkEvent.links:type_name -> yamcs.protobuf.links.LinkInfo
	12, // 5: yamcs.protobuf.links.LinkInfo.actions:type_name -> yamcs.protobuf.links.LinkActionInfo
	13, // 6: yamcs.protobuf.links.LinkInfo.extra:type_name -> google.protobuf.Struct
	1,  // 7: yamcs.protobuf.links.LinksApi.ListLinks:input_type -> yamcs.protobuf.links.ListLinksRequest
	3,  // 8: yamcs.protobuf.links.LinksApi.GetLink:input_type -> yamcs.protobuf.links.GetLinkRequest
	7,  // 9: yamcs.protobuf.links.LinksApi.UpdateLink:input_type -> yamcs.protobuf.links.EditLinkRequest
	4,  // 10: yamcs.protobuf.links.LinksApi.EnableLink:input_type -> yamcs.protobuf.links.EnableLinkRequest
	5,  // 11: yamcs.protobuf.links.LinksApi.DisableLink:input_type -> yamcs.protobuf.links.DisableLinkRequest
	6,  // 12: yamcs.protobuf.links.LinksApi.ResetLinkCounters:input_type -> yamcs.protobuf.links.ResetLinkCountersRequest
	10, // 13: yamcs.protobuf.links.LinksApi.SubscribeLinks:input_type -> yamcs.protobuf.links.SubscribeLinksRequest
	8,  // 14: yamcs.protobuf.links.LinksApi.RunAction:input_type -> yamcs.protobuf.links.RunActionRequest
	2,  // 15: yamcs.protobuf.links.LinksApi.ListLinks:output_type -> yamcs.protobuf.links.ListLinksResponse
	11, // 16: yamcs.protobuf.links.LinksApi.GetLink:output_type -> yamcs.protobuf.links.LinkInfo
	11, // 17: yamcs.protobuf.links.LinksApi.UpdateLink:output_type -> yamcs.protobuf.links.LinkInfo
	11, // 18: yamcs.protobuf.links.LinksApi.EnableLink:output_type -> yamcs.protobuf.links.LinkInfo
	11, // 19: yamcs.protobuf.links.LinksApi.DisableLink:output_type -> yamcs.protobuf.links.LinkInfo
	11, // 20: yamcs.protobuf.links.LinksApi.ResetLinkCounters:output_type -> yamcs.protobuf.links.LinkInfo
	9,  // 21: yamcs.protobuf.links.LinksApi.SubscribeLinks:output_type -> yamcs.protobuf.links.LinkEvent
	13, // 22: yamcs.protobuf.links.LinksApi.RunAction:output_type -> google.protobuf.Struct
	15, // [15:23] is the sub-list for method output_type
	7,  // [7:15] is the sub-list for method input_type
	7,  // [7:7] is the sub-list for extension type_name
	7,  // [7:7] is the sub-list for extension extendee
	0,  // [0:7] is the sub-list for field type_name
}

func init() { file_yamcs_protobuf_links_links_proto_init() }
func file_yamcs_protobuf_links_links_proto_init() {
	if File_yamcs_protobuf_links_links_proto != nil {
		return
	}
	if !protoimpl.UnsafeEnabled {
		file_yamcs_protobuf_links_links_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ListLinksRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_yamcs_protobuf_links_links_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ListLinksResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_yamcs_protobuf_links_links_proto_msgTypes[2].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetLinkRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_yamcs_protobuf_links_links_proto_msgTypes[3].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*EnableLinkRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_yamcs_protobuf_links_links_proto_msgTypes[4].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*DisableLinkRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_yamcs_protobuf_links_links_proto_msgTypes[5].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ResetLinkCountersRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_yamcs_protobuf_links_links_proto_msgTypes[6].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*EditLinkRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_yamcs_protobuf_links_links_proto_msgTypes[7].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*RunActionRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_yamcs_protobuf_links_links_proto_msgTypes[8].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*LinkEvent); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_yamcs_protobuf_links_links_proto_msgTypes[9].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SubscribeLinksRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_yamcs_protobuf_links_links_proto_msgTypes[10].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*LinkInfo); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_yamcs_protobuf_links_links_proto_msgTypes[11].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*LinkActionInfo); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_yamcs_protobuf_links_links_proto_rawDesc,
			NumEnums:      1,
			NumMessages:   12,
			NumExtensions: 0,
			NumServices:   1,
		},
		GoTypes:           file_yamcs_protobuf_links_links_proto_goTypes,
		DependencyIndexes: file_yamcs_protobuf_links_links_proto_depIdxs,
		EnumInfos:         file_yamcs_protobuf_links_links_proto_enumTypes,
		MessageInfos:      file_yamcs_protobuf_links_links_proto_msgTypes,
	}.Build()
	File_yamcs_protobuf_links_links_proto = out.File
	file_yamcs_protobuf_links_links_proto_rawDesc = nil
	file_yamcs_protobuf_links_links_proto_goTypes = nil
	file_yamcs_protobuf_links_links_proto_depIdxs = nil
}
